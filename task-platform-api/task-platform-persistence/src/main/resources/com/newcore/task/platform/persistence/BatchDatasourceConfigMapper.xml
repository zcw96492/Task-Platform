<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newcore.task.platform.persistence.BatchDatasourceConfigMapper">
  <resultMap id="BaseResultMap" type="com.newcore.task.platform.model.po.BatchDatasourceConfig">
    <id column="batch_datasource_code" jdbcType="VARCHAR" property="batchDatasourceCode" />
    <result column="batch_datasource_name" jdbcType="VARCHAR" property="batchDatasourceName" />
    <result column="datasource_url" jdbcType="VARCHAR" property="datasourceUrl" />
    <result column="datasource_connect_username" jdbcType="VARCHAR" property="datasourceConnectUsername" />
    <result column="datasource_connect_password" jdbcType="VARCHAR" property="datasourceConnectPassword" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    batch_datasource_code, batch_datasource_name, datasource_url, datasource_connect_username, 
    datasource_connect_password, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.newcore.task.platform.model.po.BatchDatasourceConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from batch_datasource_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from batch_datasource_config
    where batch_datasource_code = #{batchDatasourceCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from batch_datasource_config
    where batch_datasource_code = #{batchDatasourceCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.newcore.task.platform.model.po.BatchDatasourceConfigExample">
    delete from batch_datasource_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.newcore.task.platform.model.po.BatchDatasourceConfig">
    insert into batch_datasource_config (batch_datasource_code, batch_datasource_name, 
      datasource_url, datasource_connect_username, 
      datasource_connect_password, create_time, 
      update_time)
    values (#{batchDatasourceCode,jdbcType=VARCHAR}, #{batchDatasourceName,jdbcType=VARCHAR}, 
      #{datasourceUrl,jdbcType=VARCHAR}, #{datasourceConnectUsername,jdbcType=VARCHAR}, 
      #{datasourceConnectPassword,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.newcore.task.platform.model.po.BatchDatasourceConfig">
    insert into batch_datasource_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="batchDatasourceCode != null">
        batch_datasource_code,
      </if>
      <if test="batchDatasourceName != null">
        batch_datasource_name,
      </if>
      <if test="datasourceUrl != null">
        datasource_url,
      </if>
      <if test="datasourceConnectUsername != null">
        datasource_connect_username,
      </if>
      <if test="datasourceConnectPassword != null">
        datasource_connect_password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="batchDatasourceCode != null">
        #{batchDatasourceCode,jdbcType=VARCHAR},
      </if>
      <if test="batchDatasourceName != null">
        #{batchDatasourceName,jdbcType=VARCHAR},
      </if>
      <if test="datasourceUrl != null">
        #{datasourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="datasourceConnectUsername != null">
        #{datasourceConnectUsername,jdbcType=VARCHAR},
      </if>
      <if test="datasourceConnectPassword != null">
        #{datasourceConnectPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.newcore.task.platform.model.po.BatchDatasourceConfigExample" resultType="java.lang.Integer">
    select count(*) from batch_datasource_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update batch_datasource_config
    <set>
      <if test="record.batchDatasourceCode != null">
        batch_datasource_code = #{record.batchDatasourceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.batchDatasourceName != null">
        batch_datasource_name = #{record.batchDatasourceName,jdbcType=VARCHAR},
      </if>
      <if test="record.datasourceUrl != null">
        datasource_url = #{record.datasourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.datasourceConnectUsername != null">
        datasource_connect_username = #{record.datasourceConnectUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.datasourceConnectPassword != null">
        datasource_connect_password = #{record.datasourceConnectPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update batch_datasource_config
    set batch_datasource_code = #{record.batchDatasourceCode,jdbcType=VARCHAR},
      batch_datasource_name = #{record.batchDatasourceName,jdbcType=VARCHAR},
      datasource_url = #{record.datasourceUrl,jdbcType=VARCHAR},
      datasource_connect_username = #{record.datasourceConnectUsername,jdbcType=VARCHAR},
      datasource_connect_password = #{record.datasourceConnectPassword,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.newcore.task.platform.model.po.BatchDatasourceConfig">
    update batch_datasource_config
    <set>
      <if test="batchDatasourceName != null">
        batch_datasource_name = #{batchDatasourceName,jdbcType=VARCHAR},
      </if>
      <if test="datasourceUrl != null">
        datasource_url = #{datasourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="datasourceConnectUsername != null">
        datasource_connect_username = #{datasourceConnectUsername,jdbcType=VARCHAR},
      </if>
      <if test="datasourceConnectPassword != null">
        datasource_connect_password = #{datasourceConnectPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where batch_datasource_code = #{batchDatasourceCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newcore.task.platform.model.po.BatchDatasourceConfig">
    update batch_datasource_config
    set batch_datasource_name = #{batchDatasourceName,jdbcType=VARCHAR},
      datasource_url = #{datasourceUrl,jdbcType=VARCHAR},
      datasource_connect_username = #{datasourceConnectUsername,jdbcType=VARCHAR},
      datasource_connect_password = #{datasourceConnectPassword,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where batch_datasource_code = #{batchDatasourceCode,jdbcType=VARCHAR}
  </update>
</mapper>