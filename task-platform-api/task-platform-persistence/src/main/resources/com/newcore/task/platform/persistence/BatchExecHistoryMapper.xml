<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newcore.task.platform.persistence.BatchExecHistoryMapper">
  <resultMap id="BaseResultMap" type="com.newcore.task.platform.model.po.BatchExecHistory">
    <id column="batch_execute_id" jdbcType="BIGINT" property="batchExecuteId" />
    <result column="batch_task_id" jdbcType="BIGINT" property="batchTaskId" />
    <result column="task_execute_start_time" jdbcType="TIMESTAMP" property="taskExecuteStartTime" />
    <result column="task_execute_end_time" jdbcType="TIMESTAMP" property="taskExecuteEndTime" />
    <result column="task_execute_duration_unit" jdbcType="VARCHAR" property="taskExecuteDurationUnit" />
    <result column="task_execute_duration" jdbcType="DECIMAL" property="taskExecuteDuration" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    batch_execute_id, batch_task_id, task_execute_start_time, task_execute_end_time, 
    task_execute_duration_unit, task_execute_duration, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.newcore.task.platform.model.po.BatchExecHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from batch_exec_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from batch_exec_history
    where batch_execute_id = #{batchExecuteId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from batch_exec_history
    where batch_execute_id = #{batchExecuteId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.newcore.task.platform.model.po.BatchExecHistoryExample">
    delete from batch_exec_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.newcore.task.platform.model.po.BatchExecHistory">
    insert into batch_exec_history (batch_execute_id, batch_task_id, task_execute_start_time, 
      task_execute_end_time, task_execute_duration_unit, 
      task_execute_duration, create_time, update_time
      )
    values (#{batchExecuteId,jdbcType=BIGINT}, #{batchTaskId,jdbcType=BIGINT}, #{taskExecuteStartTime,jdbcType=TIMESTAMP}, 
      #{taskExecuteEndTime,jdbcType=TIMESTAMP}, #{taskExecuteDurationUnit,jdbcType=VARCHAR}, 
      #{taskExecuteDuration,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.newcore.task.platform.model.po.BatchExecHistory">
    insert into batch_exec_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="batchExecuteId != null">
        batch_execute_id,
      </if>
      <if test="batchTaskId != null">
        batch_task_id,
      </if>
      <if test="taskExecuteStartTime != null">
        task_execute_start_time,
      </if>
      <if test="taskExecuteEndTime != null">
        task_execute_end_time,
      </if>
      <if test="taskExecuteDurationUnit != null">
        task_execute_duration_unit,
      </if>
      <if test="taskExecuteDuration != null">
        task_execute_duration,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="batchExecuteId != null">
        #{batchExecuteId,jdbcType=BIGINT},
      </if>
      <if test="batchTaskId != null">
        #{batchTaskId,jdbcType=BIGINT},
      </if>
      <if test="taskExecuteStartTime != null">
        #{taskExecuteStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskExecuteEndTime != null">
        #{taskExecuteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskExecuteDurationUnit != null">
        #{taskExecuteDurationUnit,jdbcType=VARCHAR},
      </if>
      <if test="taskExecuteDuration != null">
        #{taskExecuteDuration,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.newcore.task.platform.model.po.BatchExecHistoryExample" resultType="java.lang.Integer">
    select count(*) from batch_exec_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update batch_exec_history
    <set>
      <if test="record.batchExecuteId != null">
        batch_execute_id = #{record.batchExecuteId,jdbcType=BIGINT},
      </if>
      <if test="record.batchTaskId != null">
        batch_task_id = #{record.batchTaskId,jdbcType=BIGINT},
      </if>
      <if test="record.taskExecuteStartTime != null">
        task_execute_start_time = #{record.taskExecuteStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskExecuteEndTime != null">
        task_execute_end_time = #{record.taskExecuteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskExecuteDurationUnit != null">
        task_execute_duration_unit = #{record.taskExecuteDurationUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.taskExecuteDuration != null">
        task_execute_duration = #{record.taskExecuteDuration,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update batch_exec_history
    set batch_execute_id = #{record.batchExecuteId,jdbcType=BIGINT},
      batch_task_id = #{record.batchTaskId,jdbcType=BIGINT},
      task_execute_start_time = #{record.taskExecuteStartTime,jdbcType=TIMESTAMP},
      task_execute_end_time = #{record.taskExecuteEndTime,jdbcType=TIMESTAMP},
      task_execute_duration_unit = #{record.taskExecuteDurationUnit,jdbcType=VARCHAR},
      task_execute_duration = #{record.taskExecuteDuration,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.newcore.task.platform.model.po.BatchExecHistory">
    update batch_exec_history
    <set>
      <if test="batchTaskId != null">
        batch_task_id = #{batchTaskId,jdbcType=BIGINT},
      </if>
      <if test="taskExecuteStartTime != null">
        task_execute_start_time = #{taskExecuteStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskExecuteEndTime != null">
        task_execute_end_time = #{taskExecuteEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskExecuteDurationUnit != null">
        task_execute_duration_unit = #{taskExecuteDurationUnit,jdbcType=VARCHAR},
      </if>
      <if test="taskExecuteDuration != null">
        task_execute_duration = #{taskExecuteDuration,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where batch_execute_id = #{batchExecuteId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newcore.task.platform.model.po.BatchExecHistory">
    update batch_exec_history
    set batch_task_id = #{batchTaskId,jdbcType=BIGINT},
      task_execute_start_time = #{taskExecuteStartTime,jdbcType=TIMESTAMP},
      task_execute_end_time = #{taskExecuteEndTime,jdbcType=TIMESTAMP},
      task_execute_duration_unit = #{taskExecuteDurationUnit,jdbcType=VARCHAR},
      task_execute_duration = #{taskExecuteDuration,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where batch_execute_id = #{batchExecuteId,jdbcType=BIGINT}
  </update>
</mapper>