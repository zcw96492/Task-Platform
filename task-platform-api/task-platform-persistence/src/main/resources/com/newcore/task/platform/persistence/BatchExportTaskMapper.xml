<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newcore.task.platform.persistence.BatchExportTaskMapper">
  <resultMap id="BaseResultMap" type="com.newcore.task.platform.model.po.BatchExportTask">
    <id column="batch_export_task_id" jdbcType="BIGINT" property="batchExportTaskId" />
    <result column="export_service_name" jdbcType="VARCHAR" property="exportServiceName" />
    <result column="export_status" jdbcType="INTEGER" property="exportStatus" />
    <result column="export_opt_clerk_branch_no" jdbcType="VARCHAR" property="exportOptClerkBranchNo" />
    <result column="export_opt_clerk_no" jdbcType="VARCHAR" property="exportOptClerkNo" />
    <result column="export_opt_clerk_name" jdbcType="VARCHAR" property="exportOptClerkName" />
    <result column="export_task_remark" jdbcType="VARCHAR" property="exportTaskRemark" />
    <result column="export_task_finish_date" jdbcType="TIMESTAMP" property="exportTaskFinishDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    batch_export_task_id, export_service_name, export_status, export_opt_clerk_branch_no, 
    export_opt_clerk_no, export_opt_clerk_name, export_task_remark, export_task_finish_date, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.newcore.task.platform.model.po.BatchExportTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from batch_export_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from batch_export_task
    where batch_export_task_id = #{batchExportTaskId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from batch_export_task
    where batch_export_task_id = #{batchExportTaskId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.newcore.task.platform.model.po.BatchExportTaskExample">
    delete from batch_export_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.newcore.task.platform.model.po.BatchExportTask">
    insert into batch_export_task (batch_export_task_id, export_service_name, 
      export_status, export_opt_clerk_branch_no, export_opt_clerk_no, 
      export_opt_clerk_name, export_task_remark, export_task_finish_date, 
      create_time, update_time)
    values (#{batchExportTaskId,jdbcType=BIGINT}, #{exportServiceName,jdbcType=VARCHAR}, 
      #{exportStatus,jdbcType=INTEGER}, #{exportOptClerkBranchNo,jdbcType=VARCHAR}, #{exportOptClerkNo,jdbcType=VARCHAR}, 
      #{exportOptClerkName,jdbcType=VARCHAR}, #{exportTaskRemark,jdbcType=VARCHAR}, #{exportTaskFinishDate,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.newcore.task.platform.model.po.BatchExportTask">
    insert into batch_export_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="batchExportTaskId != null">
        batch_export_task_id,
      </if>
      <if test="exportServiceName != null">
        export_service_name,
      </if>
      <if test="exportStatus != null">
        export_status,
      </if>
      <if test="exportOptClerkBranchNo != null">
        export_opt_clerk_branch_no,
      </if>
      <if test="exportOptClerkNo != null">
        export_opt_clerk_no,
      </if>
      <if test="exportOptClerkName != null">
        export_opt_clerk_name,
      </if>
      <if test="exportTaskRemark != null">
        export_task_remark,
      </if>
      <if test="exportTaskFinishDate != null">
        export_task_finish_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="batchExportTaskId != null">
        #{batchExportTaskId,jdbcType=BIGINT},
      </if>
      <if test="exportServiceName != null">
        #{exportServiceName,jdbcType=VARCHAR},
      </if>
      <if test="exportStatus != null">
        #{exportStatus,jdbcType=INTEGER},
      </if>
      <if test="exportOptClerkBranchNo != null">
        #{exportOptClerkBranchNo,jdbcType=VARCHAR},
      </if>
      <if test="exportOptClerkNo != null">
        #{exportOptClerkNo,jdbcType=VARCHAR},
      </if>
      <if test="exportOptClerkName != null">
        #{exportOptClerkName,jdbcType=VARCHAR},
      </if>
      <if test="exportTaskRemark != null">
        #{exportTaskRemark,jdbcType=VARCHAR},
      </if>
      <if test="exportTaskFinishDate != null">
        #{exportTaskFinishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.newcore.task.platform.model.po.BatchExportTaskExample" resultType="java.lang.Integer">
    select count(*) from batch_export_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update batch_export_task
    <set>
      <if test="record.batchExportTaskId != null">
        batch_export_task_id = #{record.batchExportTaskId,jdbcType=BIGINT},
      </if>
      <if test="record.exportServiceName != null">
        export_service_name = #{record.exportServiceName,jdbcType=VARCHAR},
      </if>
      <if test="record.exportStatus != null">
        export_status = #{record.exportStatus,jdbcType=INTEGER},
      </if>
      <if test="record.exportOptClerkBranchNo != null">
        export_opt_clerk_branch_no = #{record.exportOptClerkBranchNo,jdbcType=VARCHAR},
      </if>
      <if test="record.exportOptClerkNo != null">
        export_opt_clerk_no = #{record.exportOptClerkNo,jdbcType=VARCHAR},
      </if>
      <if test="record.exportOptClerkName != null">
        export_opt_clerk_name = #{record.exportOptClerkName,jdbcType=VARCHAR},
      </if>
      <if test="record.exportTaskRemark != null">
        export_task_remark = #{record.exportTaskRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.exportTaskFinishDate != null">
        export_task_finish_date = #{record.exportTaskFinishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update batch_export_task
    set batch_export_task_id = #{record.batchExportTaskId,jdbcType=BIGINT},
      export_service_name = #{record.exportServiceName,jdbcType=VARCHAR},
      export_status = #{record.exportStatus,jdbcType=INTEGER},
      export_opt_clerk_branch_no = #{record.exportOptClerkBranchNo,jdbcType=VARCHAR},
      export_opt_clerk_no = #{record.exportOptClerkNo,jdbcType=VARCHAR},
      export_opt_clerk_name = #{record.exportOptClerkName,jdbcType=VARCHAR},
      export_task_remark = #{record.exportTaskRemark,jdbcType=VARCHAR},
      export_task_finish_date = #{record.exportTaskFinishDate,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.newcore.task.platform.model.po.BatchExportTask">
    update batch_export_task
    <set>
      <if test="exportServiceName != null">
        export_service_name = #{exportServiceName,jdbcType=VARCHAR},
      </if>
      <if test="exportStatus != null">
        export_status = #{exportStatus,jdbcType=INTEGER},
      </if>
      <if test="exportOptClerkBranchNo != null">
        export_opt_clerk_branch_no = #{exportOptClerkBranchNo,jdbcType=VARCHAR},
      </if>
      <if test="exportOptClerkNo != null">
        export_opt_clerk_no = #{exportOptClerkNo,jdbcType=VARCHAR},
      </if>
      <if test="exportOptClerkName != null">
        export_opt_clerk_name = #{exportOptClerkName,jdbcType=VARCHAR},
      </if>
      <if test="exportTaskRemark != null">
        export_task_remark = #{exportTaskRemark,jdbcType=VARCHAR},
      </if>
      <if test="exportTaskFinishDate != null">
        export_task_finish_date = #{exportTaskFinishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where batch_export_task_id = #{batchExportTaskId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newcore.task.platform.model.po.BatchExportTask">
    update batch_export_task
    set export_service_name = #{exportServiceName,jdbcType=VARCHAR},
      export_status = #{exportStatus,jdbcType=INTEGER},
      export_opt_clerk_branch_no = #{exportOptClerkBranchNo,jdbcType=VARCHAR},
      export_opt_clerk_no = #{exportOptClerkNo,jdbcType=VARCHAR},
      export_opt_clerk_name = #{exportOptClerkName,jdbcType=VARCHAR},
      export_task_remark = #{exportTaskRemark,jdbcType=VARCHAR},
      export_task_finish_date = #{exportTaskFinishDate,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where batch_export_task_id = #{batchExportTaskId,jdbcType=BIGINT}
  </update>
</mapper>