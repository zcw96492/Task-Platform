<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newcore.task.platform.persistence.BatchTaskMapper">
  <resultMap id="BaseResultMap" type="com.newcore.task.platform.model.po.BatchTask">
    <id column="batch_task_id" jdbcType="BIGINT" property="batchTaskId" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="task_description" jdbcType="VARCHAR" property="taskDescription" />
    <result column="task_cron_expression" jdbcType="VARCHAR" property="taskCronExpression" />
    <result column="bean_class_path" jdbcType="VARCHAR" property="beanClassPath" />
    <result column="job_status" jdbcType="INTEGER" property="jobStatus" />
    <result column="job_group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    batch_task_id, task_name, task_description, task_cron_expression, bean_class_path, 
    job_status, job_group, create_user, create_time, update_user, update_time
  </sql>
  <select id="selectByExample" parameterType="com.newcore.task.platform.model.po.BatchTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from batch_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from batch_task
    where batch_task_id = #{batchTaskId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from batch_task
    where batch_task_id = #{batchTaskId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.newcore.task.platform.model.po.BatchTaskExample">
    delete from batch_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.newcore.task.platform.model.po.BatchTask">
    insert into batch_task (batch_task_id, task_name, task_description, 
      task_cron_expression, bean_class_path, job_status, 
      job_group, create_user, create_time, 
      update_user, update_time)
    values (#{batchTaskId,jdbcType=BIGINT}, #{taskName,jdbcType=VARCHAR}, #{taskDescription,jdbcType=VARCHAR}, 
      #{taskCronExpression,jdbcType=VARCHAR}, #{beanClassPath,jdbcType=VARCHAR}, #{jobStatus,jdbcType=INTEGER}, 
      #{jobGroup,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.newcore.task.platform.model.po.BatchTask">
    insert into batch_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="batchTaskId != null">
        batch_task_id,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="taskDescription != null">
        task_description,
      </if>
      <if test="taskCronExpression != null">
        task_cron_expression,
      </if>
      <if test="beanClassPath != null">
        bean_class_path,
      </if>
      <if test="jobStatus != null">
        job_status,
      </if>
      <if test="jobGroup != null">
        job_group,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="batchTaskId != null">
        #{batchTaskId,jdbcType=BIGINT},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskDescription != null">
        #{taskDescription,jdbcType=VARCHAR},
      </if>
      <if test="taskCronExpression != null">
        #{taskCronExpression,jdbcType=VARCHAR},
      </if>
      <if test="beanClassPath != null">
        #{beanClassPath,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null">
        #{jobStatus,jdbcType=INTEGER},
      </if>
      <if test="jobGroup != null">
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.newcore.task.platform.model.po.BatchTaskExample" resultType="java.lang.Integer">
    select count(*) from batch_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update batch_task
    <set>
      <if test="record.batchTaskId != null">
        batch_task_id = #{record.batchTaskId,jdbcType=BIGINT},
      </if>
      <if test="record.taskName != null">
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.taskDescription != null">
        task_description = #{record.taskDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.taskCronExpression != null">
        task_cron_expression = #{record.taskCronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.beanClassPath != null">
        bean_class_path = #{record.beanClassPath,jdbcType=VARCHAR},
      </if>
      <if test="record.jobStatus != null">
        job_status = #{record.jobStatus,jdbcType=INTEGER},
      </if>
      <if test="record.jobGroup != null">
        job_group = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update batch_task
    set batch_task_id = #{record.batchTaskId,jdbcType=BIGINT},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      task_description = #{record.taskDescription,jdbcType=VARCHAR},
      task_cron_expression = #{record.taskCronExpression,jdbcType=VARCHAR},
      bean_class_path = #{record.beanClassPath,jdbcType=VARCHAR},
      job_status = #{record.jobStatus,jdbcType=INTEGER},
      job_group = #{record.jobGroup,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.newcore.task.platform.model.po.BatchTask">
    update batch_task
    <set>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskDescription != null">
        task_description = #{taskDescription,jdbcType=VARCHAR},
      </if>
      <if test="taskCronExpression != null">
        task_cron_expression = #{taskCronExpression,jdbcType=VARCHAR},
      </if>
      <if test="beanClassPath != null">
        bean_class_path = #{beanClassPath,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null">
        job_status = #{jobStatus,jdbcType=INTEGER},
      </if>
      <if test="jobGroup != null">
        job_group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where batch_task_id = #{batchTaskId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newcore.task.platform.model.po.BatchTask">
    update batch_task
    set task_name = #{taskName,jdbcType=VARCHAR},
      task_description = #{taskDescription,jdbcType=VARCHAR},
      task_cron_expression = #{taskCronExpression,jdbcType=VARCHAR},
      bean_class_path = #{beanClassPath,jdbcType=VARCHAR},
      job_status = #{jobStatus,jdbcType=INTEGER},
      job_group = #{jobGroup,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where batch_task_id = #{batchTaskId,jdbcType=BIGINT}
  </update>
</mapper>